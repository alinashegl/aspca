@isTest
public class AnimalTriggerTest {

    static testMethod void validateAnimalTrigger(){
        
/*        Case cs = new Case();
        insert cs;
        
        Contact con = new Contact(LastName='Test', MailingCity='Test', MailingState='AK',County__c='Test');
        insert con;
        
        Contact con2 = new Contact(LastName='Test2', MailingCity='Test2', MailingState='AK',County__c='Test2');
        insert con2;
        
        Animal__c anim = new Animal__c(Name='Test', Case__c=cs.Id, Discharged_to_Contact__c=con.Id);
        
        insert anim;
      
        Test.setMock(HttpCalloutMock.class, new MockHttpCallout());
        Test.startTest();
        AnimalTriggerHandler.reverseGeoloc(40.75335663830957,-73.99213560828238, anim.Id);
        Test.stopTest();

        List<CaseContactRole> ccr = [SELECT Id, CasesId, ContactId, Role FROM CaseContactRole WHERE CasesId =: cs.Id AND ContactId =: con.Id AND Role='Animal Discharge Contact'];
        System.assertEquals(ccr.size(), 1);
        
        anim.Discharged_to_Contact__c=con2.Id;
        update anim;
        
        List<CaseContactRole> ccr2 = [SELECT Id, CasesId, ContactId, Role FROM CaseContactRole WHERE CasesId =: cs.Id AND ContactId =: con2.Id AND Role='Animal Discharge Contact'];
        System.assertEquals(ccr2.size(), 1);*/
        
    }
    

    
    
}